# Initialize charity names and totals
charity_names = ["Charity A", "Charity B", "Charity C"]
charity_totals = [0, 0, 0]

# Function to set up the donation system
def setup_donation_system():
    # Display charity names with numbers
    print("Charities:")
    for i, charity in enumerate(charity_names, start=1):
        print(f"{i}. {charity}")

# Function to record and total each donation
def record_and_total_donation():
    # Input choice of charity
    while True:
        try:
            charity_choice = int(input("Choose a charity (1, 2, or 3), or enter -1 to show totals: "))
            if charity_choice == -1:
                break
            elif 1 <= charity_choice <= 3:
                break
            else:
                print("Invalid choice. Please enter 1, 2, 3, or -1.")
        except ValueError:
            print("Invalid input. Please enter a number.")

    # If the choice is -1, show the totals
    if charity_choice == -1:
        show_totals()
        return

    # Input the value of customer's shopping bill
    while True:
        try:
            shopping_bill = float(input("Enter the customer's shopping bill: $"))
            break
        except ValueError:
            print("Invalid input. Please enter a valid number.")

    # Calculate the donation
    donation = shopping_bill * 0.01

    # Update the total for the chosen charity
    charity_totals[charity_choice - 1] += donation

    # Display results
    print(f"Donation of ${donation:.2f} made to {charity_names[charity_choice - 1]}.")
    print(f"Total donation for {charity_names[charity_choice - 1]}: ${charity_totals[charity_choice - 1]:.2f}")

# Function to show the totals so far
def show_totals():
    # Create a list of tuples for sorting
    sorted_totals = sorted(zip(charity_names, charity_totals), key=lambda x: x[1], reverse=True)

    # Display totals in descending order
    print("\nTotals So Far (Descending Order):")
    grand_total = 0
    for charity, total in sorted_totals:
        print(f"{charity}: ${total:.2f}")
        grand_total += total

    # Display grand total
    print("\nGRAND TOTAL DONATED TO CHARITY: ${:.2f}".format(grand_total))

# Test the program
setup_donation_system()

# Simulate donations from customers
for _ in range(3):  # Simulate 3 customers, you can adjust as needed
    record_and_total_donation()

# Show totals at the end
show_totals()

